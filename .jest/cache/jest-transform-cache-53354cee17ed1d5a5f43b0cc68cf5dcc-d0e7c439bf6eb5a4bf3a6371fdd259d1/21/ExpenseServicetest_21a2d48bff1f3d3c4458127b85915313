ae3a631f3f5ae4a2aae28e4a7382acf5
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.expenses = void 0;


require("react-native");
var _expenseService = _interopRequireDefault(require("../services/expense-service"));
var _jestFetchMock = _interopRequireDefault(require("jest-fetch-mock"));require("../jest-setup.js");

var expenseService = new _expenseService.default();

beforeEach(function () {
  _jestFetchMock.default.resetMocks();
});

var expenses = [
{
  id: '5b995dff2e3cb74644948a66',
  amount: {
    value: 2149.29,
    currency: 'GBP' },

  date: '2017-06-21T08:45:09.326Z',
  merchant: 'QUONK',
  receipts: [],
  comment: '',
  category: '',
  user: {
    first: 'Atkins',
    last: 'Blackburn',
    email: 'atkins.blackburn@pleo.io' },

  index: 0 },

{
  id: '5b995dffdeec40464bd614bf',
  amount: {
    value: 731.92,
    currency: 'EUR' },

  date: '2017-05-30T14:12:31.054Z',
  merchant: 'WRAPTURE',
  receipts: [],
  comment: '',
  category: '',
  user: {
    first: 'Barbara',
    last: 'Downs',
    email: 'barbara.downs@pleo.io' },

  index: 1 }];exports.expenses = expenses;



it('fetches expenses from the endpoint', function () {
  _jestFetchMock.default.mockResponseOnce(JSON.stringify(expenses));
  var onResponse = jest.fn();
  var onError = jest.fn();

  return expenseService.fetchExpenses(0, 30).
  then(onResponse).
  catch(onError).
  finally(function () {
    expect(onResponse).toHaveBeenCalled();
    expect(onError).not.toHaveBeenCalled();
    expect(onResponse.mock.calls[0][0][0]).toEqual({ id: 1 });
  });
});