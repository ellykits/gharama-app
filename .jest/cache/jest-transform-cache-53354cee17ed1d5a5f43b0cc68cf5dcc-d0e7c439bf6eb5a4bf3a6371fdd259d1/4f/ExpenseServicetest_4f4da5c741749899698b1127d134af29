8923b22d312f2cba4b97fd52aa4d4d45
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.expenses = void 0;

require("react-native");
var _expenseService = _interopRequireDefault(require("../services/expense-service"));
var _jestFetchMock = _interopRequireDefault(require("jest-fetch-mock"));

var expenseService = new _expenseService.default();

beforeEach(function () {
  _jestFetchMock.default.resetMocks();
});

var expenses = [
{
  id: '5b995dff2e3cb74644948a66',
  amount: {
    value: 2149.29,
    currency: 'GBP' },

  date: '2017-06-21T08:45:09.326Z',
  merchant: 'QUONK',
  receipts: [],
  comment: '',
  category: '',
  user: {
    first: 'Atkins',
    last: 'Blackburn',
    email: 'atkins.blackburn@pleo.io' },

  index: 0 },

{
  id: '5b995dffdeec40464bd614bf',
  amount: {
    value: 731.92,
    currency: 'EUR' },

  date: '2017-05-30T14:12:31.054Z',
  merchant: 'WRAPTURE',
  receipts: [],
  comment: '',
  category: '',
  user: {
    first: 'Barbara',
    last: 'Downs',
    email: 'barbara.downs@pleo.io' },

  index: 1 }];exports.expenses = expenses;



var expense = {
  id: '5b995d998deec40464bd614bf',
  amount: {
    value: 3000,
    currency: 'KES' },

  receipts: [
  { url: '/receipts/5b996064dfd5b783915112f5-0' }],

  merchant: "Citadel",
  user: {
    first: 'Rick',
    last: 'Sanchez',
    email: 'wabalabadabdub@ricksanchex.galaxy' },

  category: '',
  index: 3,
  date: '2020-05-30T18:11:56.054Z',
  comment: '' };


it('fetches expenses from the endpoint', function () {
  _jestFetchMock.default.mockResponseOnce(JSON.stringify(expenses));
  var onResponse = jest.fn();
  var onError = jest.fn();
  return expenseService.fetchExpenses(0, 30).
  then(onResponse).
  catch(onError).
  finally(function () {
    expect(onResponse).toHaveBeenCalled();
    expect(onError).not.toHaveBeenCalled();
    expect(onResponse.mock.calls[0][0][0]).toEqual(expenses[0]);
  });
});

it('fails to fetch expenses with wrong URL', function () {
  _expenseService.default.URL = 'http://10.0.2.2:3008/expenses';
  _jestFetchMock.default.mockResponseOnce(JSON.stringify({}));
  var onResponse = jest.fn();
  var onError = jest.fn();
  return expenseService.fetchExpenses(0, 30).
  then(onResponse).
  catch(onError).
  finally(function () {
    expect(onResponse).not.toHaveBeenCalled();
    expect(onError).toHaveBeenCalled();
  });
});

it('uploads receipts to the server', function () {
  _jestFetchMock.default.mockResponseOnce(JSON.stringify(expense));
  var callback = jest.fn();
  return expenseService.uploadReceipt("file:///storage.some.filepath", expense.id, callback);

});